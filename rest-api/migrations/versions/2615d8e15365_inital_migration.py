"""inital migration

Revision ID: 2615d8e15365
Revises: 
Create Date: 2024-01-07 00:51:30.026982

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '2615d8e15365'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('message_channels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('users_hash', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_message_channels'))
    )
    with op.batch_alter_table('message_channels', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_message_channels_users_hash'), ['users_hash'], unique=True)

    op.create_table('profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_profiles'))
    )
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_profiles_email'), ['email'], unique=True)

    op.create_table('symptoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_symptoms'))
    )
    op.create_table('channel_members',
    sa.Column('user_profile_id', sa.Integer(), nullable=True),
    sa.Column('message_channel_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_channel_id'], ['message_channels.id'], name=op.f('fk_channel_members_message_channel_id_message_channels')),
    sa.ForeignKeyConstraint(['user_profile_id'], ['profiles.id'], name=op.f('fk_channel_members_user_profile_id_profiles'))
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('channel_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['profiles.id'], name=op.f('fk_messages_author_id_profiles')),
    sa.ForeignKeyConstraint(['channel_id'], ['message_channels.id'], name=op.f('fk_messages_channel_id_message_channels')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_messages'))
    )
    op.create_table('saved_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('external_content_id', sa.Uuid(), nullable=False),
    sa.Column('user_profile_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_profile_id'], ['profiles.id'], name=op.f('fk_saved_content_user_profile_id_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_saved_content')),
    sa.UniqueConstraint('external_content_id', 'user_profile_id', name=op.f('uq_saved_content_external_content_id'))
    )
    op.create_table('user_feelings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occurrence_date', sa.DateTime(), nullable=False),
    sa.Column('user_profile_id', sa.Integer(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('general_feeling', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_profile_id'], ['profiles.id'], name=op.f('fk_user_feelings_user_profile_id_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_feelings'))
    )
    with op.batch_alter_table('user_feelings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_feelings_occurrence_date'), ['occurrence_date'], unique=False)

    op.create_table('user_symptoms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('occurrence_date', sa.DateTime(), nullable=False),
    sa.Column('user_profile_id', sa.Integer(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('symptom_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['symptom_id'], ['symptoms.id'], name=op.f('fk_user_symptoms_symptom_id_symptoms')),
    sa.ForeignKeyConstraint(['user_profile_id'], ['profiles.id'], name=op.f('fk_user_symptoms_user_profile_id_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_symptoms'))
    )
    with op.batch_alter_table('user_symptoms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_symptoms_occurrence_date'), ['occurrence_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_symptoms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_symptoms_occurrence_date'))

    op.drop_table('user_symptoms')
    with op.batch_alter_table('user_feelings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_feelings_occurrence_date'))

    op.drop_table('user_feelings')
    op.drop_table('saved_content')
    op.drop_table('messages')
    op.drop_table('channel_members')
    op.drop_table('symptoms')
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_profiles_email'))

    op.drop_table('profiles')
    with op.batch_alter_table('message_channels', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_message_channels_users_hash'))

    op.drop_table('message_channels')
    # ### end Alembic commands ###

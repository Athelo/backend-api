"""add community threads

Revision ID: ede1cb1a0274
Revises: da15cb874d6d
Create Date: 2024-01-21 05:59:15.571034

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ede1cb1a0274"
down_revision = "da15cb874d6d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "community_threads",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("display_name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["admin_profiles.id"],
            name=op.f("fk_community_threads_owner_id_admin_profiles"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_community_threads")),
        sa.UniqueConstraint("owner_id", name=op.f("uq_community_threads_owner_id")),
    )
    op.create_table(
        "thread_participants",
        sa.Column("user_profile_id", sa.Integer(), nullable=False),
        sa.Column("thread_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["thread_id"],
            ["community_threads.id"],
            name=op.f("fk_thread_participants_thread_id_community_threads"),
        ),
        sa.ForeignKeyConstraint(
            ["user_profile_id"],
            ["users.id"],
            name=op.f("fk_thread_participants_user_profile_id_users"),
        ),
        sa.UniqueConstraint(
            "user_profile_id",
            "thread_id",
            name=op.f("uq_thread_participants_user_profile_id"),
        ),
    )
    op.create_table(
        "thread_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("thread_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"], ["users.id"], name=op.f("fk_thread_posts_author_id_users")
        ),
        sa.ForeignKeyConstraint(
            ["thread_id"],
            ["community_threads.id"],
            name=op.f("fk_thread_posts_thread_id_community_threads"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_thread_posts")),
    )
    with op.batch_alter_table("admin_profiles", schema=None) as batch_op:
        batch_op.create_unique_constraint(
            batch_op.f("uq_admin_profiles_user_id"), ["user_id"]
        )

    with op.batch_alter_table("caregiver_profiles", schema=None) as batch_op:
        batch_op.create_unique_constraint(
            batch_op.f("uq_caregiver_profiles_user_id"), ["user_id"]
        )

    with op.batch_alter_table("patient_feelings", schema=None) as batch_op:
        batch_op.drop_index("ix_user_feelings_occurrence_date")
        batch_op.create_index(
            batch_op.f("ix_patient_feelings_occurrence_date"),
            ["occurrence_date"],
            unique=False,
        )

    with op.batch_alter_table("patient_profiles", schema=None) as batch_op:
        batch_op.create_unique_constraint(
            batch_op.f("uq_patient_profiles_user_id"), ["user_id"]
        )

    with op.batch_alter_table("patient_symptoms", schema=None) as batch_op:
        batch_op.drop_index("ix_user_symptoms_occurrence_date")
        batch_op.create_index(
            batch_op.f("ix_patient_symptoms_occurrence_date"),
            ["occurrence_date"],
            unique=False,
        )

    with op.batch_alter_table("provider_profiles", schema=None) as batch_op:
        batch_op.alter_column(
            "appointment_buffer_sec", existing_type=sa.INTEGER(), nullable=False
        )
        batch_op.create_unique_constraint(
            batch_op.f("uq_provider_profiles_user_id"), ["user_id"]
        )

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.alter_column("birthday", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.alter_column("phone", existing_type=sa.VARCHAR(), nullable=False)
        batch_op.drop_index("ix_profiles_email")
        batch_op.create_index(batch_op.f("ix_users_email"), ["email"], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_email"))
        batch_op.create_index("ix_profiles_email", ["email"], unique=True)
        batch_op.alter_column("phone", existing_type=sa.VARCHAR(), nullable=True)
        batch_op.alter_column("birthday", existing_type=sa.VARCHAR(), nullable=True)

    with op.batch_alter_table("provider_profiles", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("uq_provider_profiles_user_id"), type_="unique"
        )
        batch_op.alter_column(
            "appointment_buffer_sec", existing_type=sa.INTEGER(), nullable=True
        )

    with op.batch_alter_table("patient_symptoms", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_patient_symptoms_occurrence_date"))
        batch_op.create_index(
            "ix_user_symptoms_occurrence_date", ["occurrence_date"], unique=False
        )

    with op.batch_alter_table("patient_profiles", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("uq_patient_profiles_user_id"), type_="unique"
        )

    with op.batch_alter_table("patient_feelings", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_patient_feelings_occurrence_date"))
        batch_op.create_index(
            "ix_user_feelings_occurrence_date", ["occurrence_date"], unique=False
        )

    with op.batch_alter_table("caregiver_profiles", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("uq_caregiver_profiles_user_id"), type_="unique"
        )

    with op.batch_alter_table("admin_profiles", schema=None) as batch_op:
        batch_op.drop_constraint(
            batch_op.f("uq_admin_profiles_user_id"), type_="unique"
        )

    op.drop_table("thread_posts")
    op.drop_table("thread_participants")
    op.drop_table("community_threads")
    # ### end Alembic commands ###

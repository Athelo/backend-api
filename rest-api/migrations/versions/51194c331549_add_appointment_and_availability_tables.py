"""add appointment and availability tables

Revision ID: 51194c331549
Revises: da15cb874d6d
Create Date: 2024-01-22 01:45:56.171945

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '51194c331549'
down_revision = 'da15cb874d6d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('zoom_url', sa.String(), nullable=False),
    sa.Column('zoom_token', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('BOOKED', 'CANCELLED', 'NO_SHOW', 'IN_PROGRESS', 'COMPLETE', name='appointmentstatus'), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('patient_start_time', sa.DateTime(), nullable=True),
    sa.Column('provider_start_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], name=op.f('fk_appointments_patient_id_users')),
    sa.ForeignKeyConstraint(['provider_id'], ['users.id'], name=op.f('fk_appointments_provider_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_appointments'))
    )
    op.create_table('provider_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['users.id'], name=op.f('fk_provider_availability_provider_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_availability'))
    )
    with op.batch_alter_table('caregiver_profiles', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_caregiver_profiles_user_id'), ['user_id'])

    with op.batch_alter_table('patient_feelings', schema=None) as batch_op:
        batch_op.drop_index('ix_user_feelings_occurrence_date')
        batch_op.create_index(batch_op.f('ix_patient_feelings_occurrence_date'), ['occurrence_date'], unique=False)

    with op.batch_alter_table('patient_profiles', schema=None) as batch_op:
        batch_op.alter_column('cancer_status',
               existing_type=postgresql.ENUM('ACTIVE', 'REMISSION', name='cancerstatusenum'),
               type_=sa.Enum('ACTIVE', 'REMISSION', name='cancerstatusenum'),
               existing_nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_patient_profiles_user_id'), ['user_id'])

    with op.batch_alter_table('patient_symptoms', schema=None) as batch_op:
        batch_op.drop_index('ix_user_symptoms_occurrence_date')
        batch_op.create_index(batch_op.f('ix_patient_symptoms_occurrence_date'), ['occurrence_date'], unique=False)

    with op.batch_alter_table('provider_profiles', schema=None) as batch_op:
        batch_op.alter_column('appointment_buffer_sec',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_provider_profiles_user_id'), ['user_id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('birthday',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_index('ix_profiles_email')
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))
        batch_op.create_index('ix_profiles_email', ['email'], unique=True)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('birthday',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('provider_profiles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_provider_profiles_user_id'), type_='unique')
        batch_op.alter_column('appointment_buffer_sec',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('patient_symptoms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patient_symptoms_occurrence_date'))
        batch_op.create_index('ix_user_symptoms_occurrence_date', ['occurrence_date'], unique=False)

    with op.batch_alter_table('patient_profiles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_patient_profiles_user_id'), type_='unique')
        batch_op.alter_column('cancer_status',
               existing_type=sa.Enum('ACTIVE', 'REMISSION', name='cancerstatus'),
               type_=postgresql.ENUM('ACTIVE', 'REMISSION', name='cancerstatusenum'),
               existing_nullable=False)

    with op.batch_alter_table('patient_feelings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_patient_feelings_occurrence_date'))
        batch_op.create_index('ix_user_feelings_occurrence_date', ['occurrence_date'], unique=False)

    with op.batch_alter_table('caregiver_profiles', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_caregiver_profiles_user_id'), type_='unique')

    op.drop_table('provider_availability')
    op.drop_table('appointments')

    appointment_status_enum = sa.Enum('BOOKED', 'CANCELLED', 'NO_SHOW', 'IN_PROGRESS', 'COMPLETE', name='appointmentstatus', metadata=sa.MetaData())

    appointment_status_enum.drop(bind=op.get_bind(), checkfirst=True)

    # ### end Alembic commands ###

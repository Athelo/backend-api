"""add appointment and availability tables

Revision ID: ce91d646c914
Revises: ede1cb1a0274
Create Date: 2024-01-22 03:29:20.813695

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ce91d646c914'
down_revision = 'ede1cb1a0274'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('zoom_url', sa.String(), nullable=False),
    sa.Column('zoom_token', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('BOOKED', 'CANCELLED', 'NO_SHOW', 'IN_PROGRESS', 'COMPLETE', name='appointmentstatus'), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('patient_start_time', sa.DateTime(), nullable=True),
    sa.Column('provider_start_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], name=op.f('fk_appointments_patient_id_users')),
    sa.ForeignKeyConstraint(['provider_id'], ['users.id'], name=op.f('fk_appointments_provider_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_appointments'))
    )
    op.create_table('provider_availability',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('provider_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['users.id'], name=op.f('fk_provider_availability_provider_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_provider_availability'))
    )
    with op.batch_alter_table('patient_profiles', schema=None) as batch_op:
        batch_op.alter_column('cancer_status',
               existing_type=postgresql.ENUM('ACTIVE', 'REMISSION', name='cancerstatusenum'),
               type_=sa.Enum('ACTIVE', 'REMISSION', name='cancerstatusenum'),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('patient_profiles', schema=None) as batch_op:
        batch_op.alter_column('cancer_status',
               existing_type=sa.Enum('ACTIVE', 'REMISSION', name='cancerstatusenum'),
               type_=postgresql.ENUM('ACTIVE', 'REMISSION', name='cancerstatusenum'),
               existing_nullable=False)

    op.drop_table('provider_availability')
    op.drop_table('appointments')

    appointment_status_enum = sa.Enum('BOOKED', 'CANCELLED', 'NO_SHOW', 'IN_PROGRESS', 'COMPLETE', name='appointmentstatus', metadata=sa.MetaData())

    appointment_status_enum.drop(bind=op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
